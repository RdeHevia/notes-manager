{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"gLAYeA,EAZF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,+BACE,oBAAIC,UAAU,OAAd,SAAsBJ,EAAKK,UAC3B,wBAAQC,QAASL,EAAjB,SAAoCC,QCQ3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCOQC,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2G,gBCTAC,EAAU,aAcD,EAZA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWvC,EARA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAOnD,EAJA,SAACG,EAAIF,GAClB,OAAOL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkF7DK,EAxFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAUAC,qBARe,WACbC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAIG,IAElBC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAyCMC,EAAcV,EAClBJ,EAAQA,EAAMe,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAEpC,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASwB,IACvB,8BACE,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYE,KAAI,SAAA1C,GACf,OAAO,cAAC,EAAD,CACSA,KAAMA,EACpBC,iBAAkB,kBAzCD,SAAAqB,GACzB,IAAMtB,EAAO0B,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAW,2BAAO7C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CgC,EACQb,EAAIuB,GACX5B,MAAK,SAAA6B,GACJnB,EAASD,EAAMgB,KAAI,SAAA1C,GAAI,OAAIA,EAAKsB,KAAOA,EAAKtB,EAAO8C,SAEpDC,OAAM,SAAAC,GACLf,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGf4C,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAG,GAAC,OAAIA,EAAEtB,KAAOA,SAyBN4B,CAAmBlD,EAAKsB,MAD3CtB,EAAKsB,SAKhB,uBAAM6B,SA7DM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASuB,EACT2B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BxB,EACUmB,GACPrC,MAAK,SAAA6B,GACJnB,EAASD,EAAMkC,OAAOd,IACtBjB,EAAW,QAiDb,UACE,uBAAOgC,KAAK,OAAOC,MAAOlC,EAASmC,SA1BhB,SAAAX,GACvBf,QAAQC,IAAIc,EAAMY,OAAOF,OACzBjC,EAAWuB,EAAMY,OAAOF,UAyBpB,wBAAQD,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCrFNI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.081fb98f.chunk.js","sourcesContent":["const Note = ({note, toggleImportance}) => {\n  const label = note.important\n    ? 'make not important' : 'make important';\n  return (\n    <li>\n      <li className=\"note\">{note.content}</li>\n      <button onClick={toggleImportance}>{label}</button>\n\n    </li>\n  )\n}\n\nexport default Note;","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer;","import axios from 'axios';\n// const baseUrl = 'http://localhost:3001/api/notes';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data);\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data);\n}\n\nexport default {getAll, create, update};\n\n","import React, { useState, useEffect } from 'react';\n\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const effect = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n\n  useEffect(effect, [])\n\n  console.log('render', notes.length, 'notes')\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {...note, important: !note.important};\n\n    noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    })\n  }\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  }\n\n  const notesToShow = showAll ?\n    notes : notes.filter(note => note.important);\n    \n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => {\n          return <Note\n            key={note.id} note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n          })}\n      </ul>\n      <form onSubmit={addNote}>\n        <input type=\"text\" value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport axios from 'axios';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}